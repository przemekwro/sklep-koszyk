{"remainingRequest":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\src\\components\\Page.vue?vue&type=template&id=09512f3f&scoped=true&","dependencies":[{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\src\\components\\Page.vue","mtime":1597914712565},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\wronek\\WebstormProjects\\praktyki\\sklep_koszyk\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKAogICAgICAgICJ2LXJvdyIsCiAgICAgICAgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgaWQ6ICJ0b3AiLAogICAgICAgICAgICAibm8tZ3V0dGVycyI6ICIiLAogICAgICAgICAgICBhbGlnbjogImNlbnRlciIsCiAgICAgICAgICAgIGp1c3RpZnk6ICJlbmQiCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygidHJhbnNpdGlvbiIsIHsgYXR0cnM6IHsgbmFtZTogImZhZGUiIH0gfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5zZWFyY2gsCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNlYXJjaCIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXgtaGVpZ2h0IjogIjM2cHgiLCAibWF4LXdpZHRoIjogIjIwMHB4IiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygidi10ZXh0LWZpZWxkIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBydWxlczogX3ZtLnJ1bGVzLCBjb2xvcjogImdyYXkiLCBsYWJlbDogIlNlYXJjaCIgfSwKICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlYXJjaF9maWVsZCwKICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2VhcmNoX2ZpZWxkID0gJCR2CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2VhcmNoX2ZpZWxkIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0zIG1sLTMiLAogICAgICAgICAgICAgIGF0dHJzOiB7IHRpbGU6ICIiLCBpY29uOiAiIiB9LAogICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ub25PZmZTZWFyY2ggfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgYXR0cnM6IHsgY29sb3I6ICJibGFjayIsIGxhcmdlOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigibWRpLW1hZ25pZnkiKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInJvdXRlci1saW5rIiwKICAgICAgICAgICAgeyBhdHRyczogeyB0bzogIi9jYXJ0IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGNvbG9yOiAid2hpdGUiLCB0aWxlOiAiIiwgZGVwcmVzc2VkOiAiIiB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWljb24iLCB7IGF0dHJzOiB7IGxhcmdlOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIm1kaS1jYXJ0LW91dGxpbmUiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtdC01IGQtZmxleCBqdXN0aWZ5LWNlbnRlciBhbGlnbi1jZW50ZXIiLAogICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIm1hcmdpbi1sZWZ0IjogIi01cHgiLAogICAgICAgICAgICAgICAgICAgICAgICAiei1pbmRleCI6ICI2IiwKICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIyMHB4IiwKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMjBweCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJib3JkZXItcmFkaXVzIjogIjI1cHgiLAogICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICIxcHggc29saWQiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX2MoInNwYW4iLCBbX3ZtLl92KF92bS5fcyhfdm0uY2FydF9jb3VudGVyKSldKV0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInRyYW5zaXRpb24iLAogICAgICAgIHsgYXR0cnM6IHsgbmFtZTogInNsaWRlIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWltZyIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTUiLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBpZDogInBpY3R1cmUiLAogICAgICAgICAgICAgICAgIm1heC13aWR0aCI6ICIxMDAlIiwKICAgICAgICAgICAgICAgIGFsdDogIm9icmF6ZWsiLAogICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCIuLi9hc3NldHMvamVhbnMuanBnIikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1hLTE2IiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygiaDEiLCBbX3ZtLl92KCJOZXcgYXJyaXZhbHMiKV0pLAogICAgICAgICAgICAgICAgICBfYygiaDMiLCBbX3ZtLl92KCJDT0xMRUNUSU9OIDIwMTYiKV0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHRpbGU6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kdnVldGlmeS5nb1RvKCIjcHJvZHVjdHMiKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgU2hvcCBoZXJlIildCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKAogICAgICAgICJ0cmFuc2l0aW9uIiwKICAgICAgICB7IGF0dHJzOiB7IG5hbWU6ICJmYWRlIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoInYtY29udGFpbmVyIiwgWwogICAgICAgICAgICBfdm0uY2F0ZWdvcnkKICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInB0LTEwIiwgYXR0cnM6IHsgaWQ6ICJwcm9kdWN0cyIgfSB9LAogICAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmZpbHRlcmVkSXRlbXMsIGZ1bmN0aW9uKGNhdCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGNhdC5uYW1lLCBhdHRyczogeyBpZDogY2F0Lm5hbWUgfSB9LAogICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICBfYygiaDIiLCBbX3ZtLl92KF92bS5fcyhjYXQubmFtZSkpXSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0Lml0ZW1zLmxlbmd0aCA9PSAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigiSXRlbXMgbm90IGZvdW5kIildKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woY2F0Lml0ZW1zLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGl0ZW0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImNvbC1sZy0zIG9mZnNldC0wIGNvbC1tZC00IGNvbC02IHB0LTAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiUHJvZHVjdCIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgcHJvcF9wcm9kdWN0OiBpdGVtIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgXSkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKQogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}